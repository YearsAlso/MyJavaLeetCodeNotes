<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/.github/workflows/dev.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/.github/workflows/dev.yml" />
              <option name="originalContent" value="name: Java CI&#10;&#10;on:&#10;  push:&#10;    branches: [&quot;dev&quot; ]&#10;  pull_request:&#10;    branches: [ &quot;dev&quot; ]&#10;&#10;jobs:&#10;  build:&#10;    runs-on: ubuntu-latest&#10;&#10;    steps:&#10;      - name: 检出代码&#10;        uses: actions/checkout@v4&#10;&#10;      - name: 设置 JDK 21&#10;        uses: actions/setup-java@v4&#10;        with:&#10;          distribution: 'temurin'&#10;          java-version: '21'&#10;&#10;      - name: 缓存 Maven 依赖&#10;        uses: actions/cache@v4&#10;        with:&#10;          path: ~/.m2/repository&#10;          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}&#10;          restore-keys: |&#10;            ${{ runner.os }}-maven-&#10;&#10;      - name: 编译项目&#10;        run: mvn -B compile&#10;&#10;      - name: 运行测试&#10;        run: mvn -B test&#10;&#10;      - name: 构建项目&#10;        run: mvn -B package&#10;&#10;      # 如需发布，可在此添加部署步骤&#10;      # - name: 发布到某平台&#10;      #   run: echo &quot;发布步骤&quot;&#10;" />
              <option name="updatedContent" value="name: Java CI&#10;&#10;on:&#10;  push:&#10;    branches: [&quot;dev&quot; ]&#10;  pull_request:&#10;    branches: [ &quot;dev&quot; ]&#10;&#10;jobs:&#10;  build:&#10;    runs-on: ubuntu-latest&#10;&#10;    steps:&#10;      - name: 检出代码&#10;        uses: actions/checkout@v4&#10;&#10;      - name: 设置 JDK 21&#10;        uses: actions/setup-java@v4&#10;        with:&#10;          distribution: 'temurin'&#10;          java-version: '21'&#10;&#10;      - name: 缓存 Maven 依赖&#10;        uses: actions/cache@v4&#10;        with:&#10;          path: ~/.m2/repository&#10;          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}&#10;          restore-keys: |&#10;            ${{ runner.os }}-maven-&#10;&#10;      - name: 编译项目&#10;        run: mvn -B compile&#10;&#10;      - name: 运行测试&#10;        run: mvn -B test&#10;&#10;      - name: 构建项目&#10;        run: mvn -B package&#10;&#10;      - name: SonarCloud 分析&#10;        uses: SonarSource/sonarcloud-github-action@v2&#10;        with:&#10;          projectBaseDir: .&#10;        env:&#10;          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}&#10;          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}&#10;          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}&#10;&#10;      # 如需发布，可在此添加部署步骤&#10;      # - name: 发布到某平台&#10;      #   run: echo &quot;发布步骤&quot;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>